<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BusyDevice" xml:space="preserve">
    <value>O dispositivo não respondeu ao comando ENQ.</value>
  </data>
  <data name="ChecksumError" xml:space="preserve">
    <value>Mensagem não reconhecida devido a falha de checksum LRC.</value>
  </data>
  <data name="EA" xml:space="preserve">
    <value>Cartões de abertura simples esgotados. Somente é possível editar 4 cartões de abertura exclusivos por quarto e cliente. Se você pedir para editar mais, esta mensagem de erro será gerada.</value>
  </data>
  <data name="ED" xml:space="preserve">
    <value>Tempo esgotado. O gravador/leitor cancelou a operação em andamento.</value>
  </data>
  <data name="EF" xml:space="preserve">
    <value>Erro de formato magnético. O cartão foi gravado seguindo outras regras (Geralmente este erro ocorrerá quando se deseja ler na faixa 3 de acordo com os padrões ISO um cartão gravado de acordo com os padrões ONITY) ou a fita magnética está com defeito.</value>
  </data>
  <data name="EN" xml:space="preserve">
    <value>Erro de nível. O cartão foi gravado em um nível muito baixo. (Sujeira na cabeça do gravador ou cartão de baixa qualidade).</value>
  </data>
  <data name="EP" xml:space="preserve">
    <value>Erro na tarja magnética. Cartão inserido para trás ou falta de tarja magnética.</value>
  </data>
  <data name="ES" xml:space="preserve">
    <value>Erro de sintaxe. A mensagem está incorreta (comando desconhecido, parâmetros
caracteres incorretos, proibidos ou muitos caracteres em
gravação de acordo com as normas ISO, etc. ...)</value>
  </data>
  <data name="ET" xml:space="preserve">
    <value>Cartão preso. O cartão não está em conformidade com as medições físicas exigidas</value>
  </data>
  <data name="InvalidReply" xml:space="preserve">
    <value>O comando "{0}" retornou uma resposta inválida "{1}"</value>
  </data>
  <data name="NC" xml:space="preserve">
    <value>Nenhuma resposta do gravador/leitor endereçado. Falha de comunicação, desligamento ou leitor não existe.</value>
  </data>
  <data name="NF" xml:space="preserve">
    <value>Sem arquivos. Arquivos de interface PC danificados ou não encontrados</value>
  </data>
  <data name="OS" xml:space="preserve">
    <value>Quarto fora de serviço. Você não pode gravar o
cartão até que o quarto esteja de volta em serviço
indicando-o no programa HT24.</value>
  </data>
  <data name="OV" xml:space="preserve">
    <value>Ocupado. O gravador/leitor endereçado não terminou a tarefa anterior.</value>
  </data>
  <data name="TD" xml:space="preserve">
    <value>Quarto desconhecido. Enviando um cartão para um quarto que não existe.</value>
  </data>
  <data name="UnknownErrorCode" xml:space="preserve">
    <value>Código desconhecido "{0}"</value>
  </data>
</root>